---
### Docker URL. Default is unix:///var/run/docker.sock
### You can also run Baha with the env variable:
### DOCKER_HOST=tcp://192.168.59.103:2376 
# docker_url: tcp://192.168.59.103:2376
#
defaults:
  ### If an image doesn't have a parent, it will default to this one.
  parent: ubuntu:14.04.1
  ### When tagging an image, the name will be tagged with: {repository}/{name}
  repository: docker.example.com/baha
  ### Put your name and email here to claim authorship
  maintainer: Ishmael <ishmael@example.com>
  ### By default, the image's workspace will be mounted here inside the container
  bind: '/.data'
### If your docker is configured for SSL connections
### You should supply the options here.
###
### ENV variables take precedence over the ssl config
### - DOCKER_CERT_PATH and DOCKER_TLS_VERIFY=1
###
### Leave this out if your docker connection is insecure (http or unix socket)
### Having an ssl config assumes the connection is https://
### having a unix socket assumes the connection is insecure, this section would be ignored
ssl:
  ### Path to certificates and key
  ### Assumes the files are: ca.pem, cert.pem, and key.pem
  ### Same as specifying DOCKER_CERT_PATH=~/.boot2docker/certs/boot2docker-vm
  # cert_path: ~/.boot2docker/certs/boot2docker-vm
  #
  ### You can also specify them individually:
  # cert: ~/.boot2docker/certs/boot2docker-vm/cert.pem
  # key: ~/.boot2docker/certs/boot2docker-vm/key.pem
  # ca: ~/.boot2docker/certs/boot2docker-vm/ca.pem
  #
  ### Verify docker host's certificate chain
  verify: true
### Each image is an element of the images array
### The images will be built in the order they appear
images:
  - name: base
    tag: 1.0.0 # Tag your image with a version. If the version changes, the image will be rebuilt
    ### This list of tasks will be executed in order *before* the image container is built.
    ### It is meant to prepare the workspace by downloading and creating scripts to be run in the context of the container.
    pre_build:
      ### The template module copies/processes an ERB into the image's workspace folder
      - { template: 'base/init.sh.erb', dest: 'init.sh' }
      ### This template shows the available bindings
      - { template: 'base/test-template.erb', dest: 'test.txt' }
    command: ['/bin/bash','/.data/init.sh']
  ### Instead of listing all of the image configs in the same file, you can
  ### include them from another file relative to this config. 
  ### Keep things modular and maintainable.
  - include: rvm/image.yml
